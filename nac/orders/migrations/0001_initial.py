# Generated by Django 2.2.7 on 2019-12-29 10:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import orders.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('caravans', '0001_initial'),
        ('dealerships', '0001_initial'),
        ('customers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('deleted', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('custom_series_name', models.CharField(blank=True, max_length=500)),
                ('custom_series_code', models.CharField(blank=True, max_length=500)),
                ('weight_estimate_disclaimer_checked', models.BooleanField(default=False)),
                ('custom_tare_weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('custom_ball_weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('price_adjustment_cost', models.DecimalField(decimal_places=2, default=0, max_digits=8, null=True)),
                ('price_adjustment_wholesale', models.DecimalField(decimal_places=2, default=0, max_digits=8, null=True)),
                ('price_adjustment_wholesale_comment', models.CharField(blank=True, max_length=2000)),
                ('price_adjustment_retail', models.DecimalField(decimal_places=2, default=0, max_digits=8, null=True)),
                ('dealer_load', models.DecimalField(decimal_places=2, default=0, max_digits=8, null=True)),
                ('trade_in_write_back', models.DecimalField(decimal_places=2, default=0, max_digits=8, null=True)),
                ('trade_in_comment', models.CharField(blank=True, max_length=2000)),
                ('after_sales_wholesale', models.DecimalField(decimal_places=2, default=0, max_digits=8, null=True)),
                ('after_sales_retail', models.DecimalField(decimal_places=2, default=0, max_digits=8, null=True)),
                ('after_sales_description', models.CharField(blank=True, max_length=2000)),
                ('price_comment', models.CharField(blank=True, max_length=2000)),
                ('has_missing_selections', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField()),
                ('caravan_details_saved_on', models.DateTimeField(blank=True, null=True, verbose_name='Caravan Details Saved on')),
                ('order_requested', models.DateTimeField(blank=True, null=True)),
                ('order_rejected', models.DateTimeField(blank=True, null=True)),
                ('order_submitted', models.DateTimeField(blank=True, null=True)),
                ('order_converted', models.DateField(blank=True, null=True)),
                ('is_order_converted', models.BooleanField(default=False)),
                ('order_cancelled', models.DateTimeField(blank=True, null=True)),
                ('order_cancelled_reason', models.CharField(blank=True, max_length=2000)),
                ('order_date', models.DateTimeField(blank=True, null=True)),
                ('order_finalization_requested_at', models.DateTimeField(blank=True, null=True)),
                ('order_finalized_at', models.DateTimeField(blank=True, null=True)),
                ('order_finalization_was_auto', models.NullBooleanField(default=None, verbose_name='Finalization was automatic?')),
                ('order_finalization_cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('order_finalization_cancel_reason', models.CharField(blank=True, max_length=2000)),
                ('special_features_changed_at', models.DateTimeField(blank=True, null=True)),
                ('special_features_approved_at', models.DateTimeField(blank=True, null=True)),
                ('special_features_rejected_at', models.DateTimeField(blank=True, null=True)),
                ('customer_plan_changed_at', models.DateTimeField(blank=True, null=True)),
                ('customer_plan_approved_at', models.DateTimeField(blank=True, null=True)),
                ('customer_plan_rejected_at', models.DateTimeField(blank=True, null=True)),
                ('customer_plan_rejected_reason', models.CharField(blank=True, max_length=2000)),
                ('customer_plan_disclaimer_checked', models.BooleanField(default=False)),
                ('chassis', models.CharField(blank=True, max_length=255)),
                ('deposit_paid_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Deposit Amount')),
                ('dispatch_date_planned', models.DateField(blank=True, null=True)),
                ('dispatch_date_actual', models.DateField(blank=True, null=True)),
                ('received_date_dealership', models.DateField(blank=True, null=True)),
                ('delivery_date_customer', models.DateField(blank=True, null=True)),
                ('scheduling_comments', models.CharField(blank=True, max_length=2000)),
                ('dealer_comments', models.CharField(blank=True, max_length=2000)),
                ('is_up_to_date_with_egm', models.BooleanField(default=False)),
                ('salesforce_handover_recorded_at', models.DateTimeField(blank=True, null=True)),
                ('salesforce_delivery_recorded_at', models.DateTimeField(blank=True, null=True)),
                ('salesforce_sync_error', models.BooleanField(default=False)),
                ('caravan_details_saved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_caravan_details_saved_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Caravan Details Saved by')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='customers.Customer')),
                ('customer_manager', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customer_manager_order_set', to='dealerships.DealershipUser')),
                ('customer_plan_approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_customer_plan_approved_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Customer plan approved by')),
                ('customer_plan_changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_customer_plan_changed_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Customer plan changed by')),
                ('customer_plan_rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_customer_plan_rejected_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Customer plan rejected by')),
                ('dealer_sales_rep', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dealer_sales_reap_order_set', to='dealerships.DealershipUser')),
                ('dealership', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dealerships.Dealership')),
                ('order_finalization_cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_order_finalization_cancelled_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Finalization cancelled by')),
                ('order_finalization_requested_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_order_finalization_requested_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Finalization requested by')),
            ],
            options={
                'db_table': 'order',
                'permissions': (('view_order_all', 'Can view all orders'), ('view_order_own', 'Can view own orders'), ('view_production_data', 'Can view production data'), ('print_for_autocad', 'Can print Order for AutoCAD'), ('create_order_all', 'Can create new orders for all dealerships'), ('create_order_own', 'Can create new orders only for assigned dealerships'), ('modify_order_all', 'Can modify all orders'), ('modify_order_dealership', 'Can modify orders for assigned dealership'), ('modify_order_finalized', 'Can modify an order after it has been finalised'), ('request_order_approval', 'Request for an order to be approved: Step 1 in approval workflow'), ('approve_order_all', 'Approve any order and pass it to production for build scheduling: Step 2 in approval workflow'), ('approve_order_own', 'Approve order in own dealership only and pass it to production for build scheduling: Step 2 in approval workflow'), ('cancel_order', 'Cancel any order'), ('finalize_order_all', 'Finalise an order: Step 3 in approval workflow'), ('cancel_finalization', 'Reverse order finalisation'), ('view_order_cost_price', 'View the cost price for an order'), ('view_order_trade_price_all', 'View the trade price for all orders'), ('view_order_retail_price', 'View the retail price for an order'), ('modify_order_trade_price', 'Can modify the trade price for all orders'), ('modify_order_retail_price', 'Can modify the retail price for an order'), ('modify_order_other_prices_all', 'Can modify prices for an order (including retail, dealer load, trade-in and comments'), ('modify_order_deposit', 'Can modify the deposit paid on an order'), ('modify_chassis_number', 'Can assign a chassis number for an order'), ('modify_order_drafter', 'Can modify drafter for an order'), ('modify_order_qc_date_planned', 'Can modify the planned QC date for an order'), ('modify_order_qc_date_actual', 'Can modify the actual QC date for an order'), ('modify_order_vin_number', 'Can modify VIN Number for an order'), ('modify_order_weights', 'Can modify weights for an order'), ('modify_order_dispatch_date_planned', 'Can modify the planned dispatch date for an order'), ('modify_order_dispatch_date_actual', 'Can modify the actual dispatch date for an order'), ('update_handover_to_driver_form', 'Can update the handover to driver form for an order'), ('modify_order_received_date_dealership', 'Can modify the dealership received date for an order'), ('update_handover_to_dealership_form', 'Can update the handover to dealership form for an order'), ('modify_order_delivery_date_customer', 'Can modify customer delivery date for an order'), ('print_invoice_all', 'Can print invoice for all orders'), ('print_invoice_own', 'Can print invoice for own orders'), ('reassign_order_all', 'Can reassign orders'), ('reassign_stock_orders', 'Can assign stock orders to a different Dealership'), ('approve_special_features', 'Can approve or reject special features'), ('modify_special_features_wholesale', 'Can modify the wholesale price of special features'), ('modify_special_features', 'Can modify the detailed special features'), ('set_custom_series', 'Can set a custom series name and code'), ('view_schedule_availability', 'Can view the Schedule Availability screen'), ('manual_override', 'Can manually override any value'), ('replace_sku', 'Can use the "Replace SKU" function')),
            },
        ),
        migrations.CreateModel(
            name='OrderShowSpecial',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='orders.Order')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='SpecialFeature',
            fields=[
                ('deleted', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_description', models.TextField(blank=True)),
                ('retail_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('wholesale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('document', models.FileField(null=True, upload_to=orders.models.order_special_feature_document_path)),
                ('factory_description', models.TextField(blank=True)),
                ('approved', models.NullBooleanField()),
                ('reject_reason', models.CharField(blank=True, max_length=1000)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='orders.Order')),
                ('sku_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='caravans.SKUCategory')),
            ],
            options={
                'verbose_name': 'Special Feature',
            },
        ),
        migrations.CreateModel(
            name='ShowSpecial',
            fields=[
                ('deleted', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('availability_description', models.TextField()),
                ('available_from', models.DateField()),
                ('available_to', models.DateField()),
                ('tac_url', models.URLField(blank=True, max_length=2000, null=True, verbose_name='Terms and Conditions URL')),
                ('dealerships', models.ManyToManyField(to='dealerships.Dealership')),
                ('rules', models.ManyToManyField(to='caravans.Rule')),
            ],
            options={
                'ordering': ('name',),
                'permissions': (('apply_specials_all', 'Can apply any special to an order'),),
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('stand_manager', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stand_manager_1_order_set', to=settings.AUTH_USER_MODEL, verbose_name='Stand Manager 1')),
                ('stand_manager_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='stand_manager_2_order_set', to=settings.AUTH_USER_MODEL)),
                ('stand_manager_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='stand_manager_3_order_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SalesforceError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('payload', models.TextField()),
                ('response_code', models.CharField(max_length=255)),
                ('response', models.TextField()),
                ('response_delay', models.FloatField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='salesforce_errors', to='orders.Order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderSKU',
            fields=[
                ('deleted', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('base_availability_type', models.IntegerField(choices=[(1, 'Standard'), (2, 'Upgrade'), (3, 'Not Used'), (4, 'Optional Extra'), (5, 'Selection')])),
                ('retail_price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('wholesale_price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('cost_price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orders.Order')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='caravans.SKU')),
            ],
            options={
                'db_table': 'order_sku',
                'ordering': ['sku__sku_category__screen_order', 'sku__sku_category__name'],
            },
        ),
        migrations.CreateModel(
            name='OrderShowSpecialLineItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField()),
                ('price_adjustment', models.DecimalField(decimal_places=2, max_digits=8)),
                ('order_show_special', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='orders.OrderShowSpecial')),
            ],
            options={
                'ordering': ('order_show_special', 'name'),
            },
        ),
        migrations.AddField(
            model_name='ordershowspecial',
            name='special',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orders.ShowSpecial'),
        ),
        migrations.CreateModel(
            name='OrderSeries',
            fields=[
                ('deleted', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('wholesale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('retail_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='orders.Order')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='caravans.Series')),
            ],
            options={
                'db_table': 'order_series',
            },
        ),
        migrations.CreateModel(
            name='OrderRulePlan',
            fields=[
                ('deleted', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=orders.models.rule_plan_path)),
                ('notes', models.TextField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='orders.Order')),
                ('sku', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='caravans.SKU')),
            ],
            options={
                'ordering': ('order', 'sku', 'file'),
            },
        ),
        migrations.CreateModel(
            name='OrderNote',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('note', models.TextField(null=True)),
                ('file', models.FileField(null=True, upload_to=orders.models.order_note_path)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='orders.Order')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='OrderDocument',
            fields=[
                ('deleted', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(null=True, upload_to=orders.models.order_document_path)),
                ('is_separated', models.BooleanField(default=False)),
                ('type', models.IntegerField(choices=[(1, 'Customer Plan'), (2, 'Factory Plan'), (3, 'Chassis Plan'), (4, 'Contract'), (5, 'Handover to driver form'), (6, 'Handover to dealership form')])),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='orders.Order')),
            ],
            options={
                'ordering': ('order',),
                'permissions': (('modify_orderdocument_customer_plan_own', 'Can modify a customer plan that is assigned to self'), ('modify_orderdocument_customer_plan_all', 'Can modify all customer plans'), ('modify_orderdocument_factory_plan_own', 'Can modify a factory plan that is assigned to self'), ('modify_orderdocument_factory_plan_all', 'Can modify all factory plans'), ('modify_orderdocument_chassis_plan_own', 'Can modify a chassis plan that is assigned to self'), ('modify_orderdocument_chassis_plan_all', 'Can modify all chassis plans'), ('review_customer_plan_own', 'Can approve or reject the customer plans for own orders'), ('review_customer_plan_all', 'Can approve or reject all customer plans')),
            },
        ),
        migrations.CreateModel(
            name='OrderConditions',
            fields=[
                ('deleted', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('details', models.TextField()),
                ('fulfilled', models.BooleanField(default=False)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='orders.Order')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='show',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orders.Show'),
        ),
        migrations.AddField(
            model_name='order',
            name='special_features_approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_special_features_approved_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Special features approved by'),
        ),
        migrations.AddField(
            model_name='order',
            name='special_features_changed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_special_features_changed_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Special features changed by'),
        ),
        migrations.AddField(
            model_name='order',
            name='special_features_rejected_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='order_special_features_rejected_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Special features rejected by'),
        ),
        migrations.CreateModel(
            name='ChassisNumber',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('assigned_at', models.DateTimeField()),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('order', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orders.Order')),
            ],
        ),
        migrations.CreateModel(
            name='AfterMarketNote',
            fields=[
                ('deleted', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('note', models.TextField()),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='orders.Order')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.AlterIndexTogether(
            name='order',
            index_together={('dealership',)},
        ),
    ]
